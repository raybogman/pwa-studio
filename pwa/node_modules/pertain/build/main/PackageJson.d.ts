export interface JsonMap<T> {
    [key: string]: T;
}
/**
 * Lazy-loading proxy for package.json. A subset of properties are available,
 * and a static method
 * `PackageJson.lookup(package: PackageJson, dotPath: string)`
 * exists for looking up other arbitrary properties.
 *
 * This speeds up dependency gathering; it won't be necessary to read all
 * package files from disk.
 */
export default class PackageJson {
    /**
     * Look up a custom dot-path on a package.json instance. Abstracting this
     * simple operation behind a static method helps us to keep this loading lazy.
     */
    static lookup(pkg: PackageJson, dotPath: string): unknown;
    get dependencies(): JsonMap<string>;
    get devDependencies(): JsonMap<string>;
    get name(): string;
    get peerDependencies(): JsonMap<string>;
    private json;
    private modulePath;
    constructor(modulePath: string);
    private getJson;
}
